service: Practical-6-2

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x

plugins:
  - serverless-middleware
  - serverless-offline
  - serverless-dynamodb-local

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
      noStart: true

functions:
  getUser:
    handler: src/controller/user/userController.getUser
    events:
      - httpApi:
          path: /user
          method: GET

  addUser:
    handler: src/controller/user/userController.addUser
    events:
      - httpApi:
          path: /user
          method: POST
    middleware:
      pre: 
       - src/controller/user/user.validator.uservalidation  

  updateUser:
    handler: src/controller/user/userController.updateUser
    events:
      - httpApi:
          path: /user/{ID}
          method: PUT

  deleteUser:
    handler: src/controller/user/userController.deleteUser
    events:
      - httpApi:
          path: /user/{ID}
          method: DELETE

  getProject:
    handler: src/controller/project/projectController.getProject
    events:
      - httpApi:
          path: /project
          method: GET

  addProject:
    handler: src/controller/project/projectController.addProject
    events:
      - httpApi:
          path: /project
          method: POST
    middleware:
      pre: 
       - src/controller/project/project.validator.projectvalidation    

  updateProject:
    handler: src/controller/project/projectController.updateProject
    events:
      - httpApi:
          path: /project/{ID}
          method: PUT

  deleteProject:
    handler: src/controller/project/projectController.deleteProject
    events:
      - httpApi:
          path: /project/{ID}
          method: DELETE

  getTask:
    handler: src/controller/task/taskController.getTask
    events:
      - httpApi:
          path: /task
          method: GET
  addTask:
    handler: src/controller/task/taskController.addTask
    events:
      - httpApi:
          path: /task
          method: POST
    middleware:
      pre: 
       - src/controller/task/task.validator.taskvalidation

  updateTask:
    handler: src/controller/task/taskController.updateTask
    events:
      - httpApi:
          path: /task/{ID}
          method: PUT

  deleteTask:
    handler: src/controller/task/taskController.deleteTask
    events:
      - httpApi:
          path: /task/{ID}
          method: DELETE

resources:
  Resources:
    userTables:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: userTables
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: N
        KeySchema:
          - AttributeName: ID
            KeyType: HASH

    projectTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: projectTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: N
        KeySchema:
          - AttributeName: ID
            KeyType: HASH      

    taskTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: taskTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: N
        KeySchema:
          - AttributeName: ID
            KeyType: HASH              